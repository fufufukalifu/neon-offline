<!-- ini START Template Footer --><script type="text/javascript" src="<?= base_url('assets/library/jquery/js/jquery.min.js'); ?>"></script><!--/ END Template Footer --><!--<script type="text/javascript" src="<?= base_url('assets/library/jquery/js/jquery-migrate.min.js'); ?>"></script>--><script type="text/javascript" src="<?= base_url('assets/library/bootstrap/js/bootstrap.min.js'); ?>"></script><script type="text/javascript" src="<?= base_url('assets/library/core/js/core.min.js'); ?>"></script><!--/ Library script --><!-- App and page level script --><!-- ini footer --><!-- <script src="<?php echo base_url(); ?>assets/js/paginga.jquery.min.js"></script><script src="<?php echo base_url(); ?>assets/js/soal_to.js"></script> --><script>    function disableF5(e) {        if ((e.which || e.keyCode) == 116)            e.preventDefault();    }    ;    $(document).on("keydown", disableF5);    $(document).bind("contextmenu", function (e) {        e.preventDefault();    });</script><script type="text/javascript">    window.onbeforeunload = function () {        return "Data yang dimasukan akan hilang, yakin keluar dari halaman?";    };</script><script>    function countdown(minutes, stat) {        var seconds = 60;        var mins = minutes;        if (getCookie("minutes") && getCookie("seconds") && stat)        {            var seconds = getCookie("seconds");            var mins = getCookie("minutes");        }        function tick() {            var counter = document.getElementById("timer");            setCookie("minutes", mins, 10);            setCookie("seconds", seconds, 10);            var current_minutes = mins - 1            seconds--;            counter.innerHTML = current_minutes.toString() + ":" + (seconds < 10 ? "0" : "") + String(seconds);            //save the time in cookie            if (seconds > 0) {                setTimeout(tick, 1000);            } else {                if (mins > 1) {                    // countdown(mins-1);   never reach “00″ issue solved:Contributed by Victor Streithorst                    setTimeout(function () {                        countdown(parseInt(mins) - 1, false);                    }, 1000);                } else {                    swal("Waktu Habis!", "Saatnya mengirimkan hasil jawabanmu!", "success");                    swal({                      title: "Waktu Habis!",                      text: "Saatnya mengirimkan hasil jawabanmu!",                      type: "success",                      showCancelButton: false,                      confirmButtonColor: "#DD6B55",                      confirmButtonText: "Oke!",                      // cancelButtonText: "Tidak, batalkan!",                      closeOnConfirm: false,                      closeOnCancel: false                    },                    function(isConfirm){                      if (isConfirm) {                        document.getElementById("hasil").submit();                        window.onbeforeunload = null;                        deleteAllCookies('seconds', 'minutes');                      } else {                        document.getElementById("hasil").submit();                        window.onbeforeunload = null;                        deleteAllCookies('seconds', 'minutes');                      }                    });                    // alert('Waktu Habis!');                }            }        }        tick();    }    function setCookie(cname, cvalue, exdays) {        var d = new Date();        d.setTime(d.getTime() + (exdays * 1000));        var expires = "expires=" + d.toGMTString();        document.cookie = cname + "=" + cvalue + "; " + expires;    }    function getCookie(cname) {        var name = cname + "=";        var ca = document.cookie.split(';');        for (var i = 0; i < ca.length; i++) {            var c = ca[i];            while (c.charAt(0) == ' ')                c = c.substring(1);            if (c.indexOf(name) == 0) {                return c.substring(name.length, c.length);            }        }        return "";    }    // deleteAllCookies('seconds', 'minutes');//        deleteAllCookies();   countdown(<?php foreach ($paket as $row) {echo $row['durasi']; } ?>, true);    // countdown(1, true);//    countup(0, 0, 0, true);    function deleteAllCookies(seconds, mins) {        document.cookie = seconds + '=; expires=Thu, 01-Jan-70 00:00:01 GMT;';        document.cookie = mins + '=; expires=Thu, 01-Jan-70 00:00:01 GMT;';    }</script><script type="text/javascript">    function deleteAllCookies() {        setCookie('minutes', '', -1);        setCookie('seconds', '', -1);    }</script><script>    function statusPengisian(status) {        var id = status;        var x = document.getElementById(id);        x.classList.remove("btn-danger");        x.className += " bg-primary";    }    function kirimHasil(){        window.onbeforeunload = null;        swal({          title: "Yakin selesai mengerjakan?",          text: "kamu tidak akan bisa kembali ke sini lagi!",          type: "warning",          showCancelButton: true,          confirmButtonColor: "#DD6B55",          confirmButtonText: "Ya, saya yakin!",          cancelButtonText: "Tidak, batalkan!",          closeOnConfirm: false,          closeOnCancel: false        },        function(isConfirm){          if (isConfirm) {            window.onbeforeunload = null;            deleteAllCookies('seconds', 'minutes');            document.getElementById("hasil").submit();          } else {            swal("Dibatalkan", "Pengiriman LJK dibatalkan", "error");          }        });                  }</script><script type="text/javascript" src="<?= base_url('assets/plugins/owl/js/owl.carousel.min.js'); ?>"></script><script type="text/javascript" src="<?= base_url('assets/javascript/pages/frontend/home.js'); ?>"></script><!-- Start Math jax --> <script type="text/x-mathjax-config">     MathJax.Hub.Config({     tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}     }); </script> <script type="text/javascript" async         src="<?= base_url('assets/plugins/MathJax-master/MathJax.js?config=TeX-MML-AM_HTMLorMML') ?>"></script> <!-- end Math jax --></body>